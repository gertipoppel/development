<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright FUJITSU LIMITED 2016-->
 
<project name="ADM Developer tasks - SSO" default="" basedir=".">

  <description>This build file is used to build, deploy mock products for SSO tests</description>

  <import file="macrodefs-dev.xml" />
  <property environment="env" />
  <property name="env.HOSTNAME" value="${env.COMPUTERNAME}" />
  <property name="dev.dir" value="${basedir}/../../.." />
  <property name="adm.ue.buildscript.dir" location="${dev.dir}/oscm-build" />
  <property name="adm.ue.buildscript.file" location="${adm.ue.buildscript.dir}/build.xml" />
  <property name="build.result.package.dir" location="${adm.ue.buildscript.dir}/result/package" />
  <property name="integration.resources.dir" location="${dev.dir}/oscm-integrationtests-setup/resources" />
  <property name="local.dir" value="${basedir}/../local/${env.HOSTNAME}" />
  <verifyFileExists filePath="${local.dir}/integration.properties" />
  <echo message="Loading integration.properties from ${local.dir}/integration.properties" />
  <property file="${local.dir}/integration.properties" />
  <property file="${local.dir}/test.properties" />
  <property name="bes.domain.apps" value="${glassfish.home}/glassfish/domains/${glassfish.bes.domain.name}/applications" />
  <property name="master.domain.apps" value="${glassfish.home}/glassfish/domains/${glassfish.master.domain.name}/applications" />
  <property name="example.domain.apps" value="${glassfish.home}/glassfish/domains/${glassfish.example.domain.name}/applications" />
  <property name="app.domain.apps" value="${glassfish.home}/glassfish/domains/${glassfish.app.domain.name}/applications" />
  <property name="working.dir" value="${local.dir}" />
  <available file="${build.result.package.dir}/oscm-devruntime" type="dir" property="DatabaseUpgradeHandler.present" />
  <available file="${build.result.package.dir}/oscm-extsvc-internal" type="dir" property="WebtestEnvironment.present" />
  <import file="${basedir}/../macrodefs.xml" />
  <import file="${integration.resources.dir}/macrodefs_integration.xml" />
  <import file="${basedir}/../build-SSO-util.xml" />
  <besDomainProperties />
  <clusterProperties />

  <target name="MockSTS.SetUp" depends="MockSTS.CLEAN,MockSTS.BUILD,MockSTS.UNDEPLOY,MockSTS.DEPLOY" description="Builds the mock sts application and deploys it into the example domain">
  </target>

  <target name="MockSTS.BUILD" description="Builds the mock sts, the build result can be found in oscm-build/result/package">
    <ant dir="${adm.ue.buildscript.dir}" antfile="${adm.ue.buildscript.file}" target="package">
      <property name="projects" value="oscm-integrationtests-saml2-sp,oscm-integrationtests-saml2-sts,oscm-integration-ws-security-client" />
    </ant>
  </target>

  <target name="MockSTS.UNDEPLOY" description="Undeploys the mock sts from the example domain">
    <undeployFromExampleDomain appl="oscm-integrationtests-saml2-sp" failonerror="false" />
    <undeployFromExampleDomain appl="oscm-integrationtests-saml2-sts" failonerror="false" />
    <undeployFromExampleDomain appl="oscm-integration-ws-security-client" failonerror="false" />
  </target>

  <target name="MockSTS.DEPLOY" description="Deploys the mock sts into the exmaple domain">
    <delete file="${example.domain.apps}/oscm-integrationtests-saml2-sp/.glassfishStaleFiles" failonerror="false" />
    <deployOnExampleDomain target="server" appl="${build.result.package.dir}/oscm-integrationtests-saml2-sp/oscm-integrationtests-saml2-sp.war" />
    <delete file="${example.domain.apps}/oscm-integrationtests-saml2-sts/.glassfishStaleFiles" failonerror="false" />
    <deployOnExampleDomain target="server" appl="${build.result.package.dir}/oscm-integrationtests-saml2-sts/oscm-integrationtests-saml2-sts.war" />
    <delete file="${example.domain.apps}/oscm-integration-ws-security-client/.glassfishStaleFiles" failonerror="false" />
    <deployOnExampleDomain target="server" appl="${build.result.package.dir}/oscm-integration-ws-security-client/oscm-integration-ws-security-client.war" />
  </target>

  <target name="MockSTS.CLEAN" description="Cleans the build result of the mock sts">
    <delete dir="${build.result.package.dir}/oscm-integrationtests-saml2-sp" />
    <delete dir="${build.result.package.dir}/oscm-integrationtests-saml2-sts" />
    <delete dir="${build.result.package.dir}/oscm-integration-ws-security-client" />
  </target>

  <target name="MockSTSClient.CLEAN" description="Cleans the build mock ws build result">
    <delete dir="${build.result.package.dir}/oscm-integration-ws-security-client" />
  </target>

  <target name="MockWSClient.DEPLOY" description="Deploys the mock ws client into the example domain">
    <delete file="${example.domain.apps}/oscm-integration-ws-security-client/.glassfishStaleFiles" failonerror="false" />
    <deployOnExampleDomain target="server" appl="${build.result.package.dir}/oscm-integration-ws-security-client/oscm-integration-ws-security-client.war" />
  </target>

  <target name="MockWSClient.UNDEPLOY" description="Undeploys the mock ws client from the example domain">
    <undeployFromExampleDomain target="server" appl="oscm-integration-ws-security-client" failonerror="false" />
  </target>

  <target name="patchBesEar" description="Patches the BES ear file (oscm-build/result/package/oscm-ear) with WSIT security information">
    <property name="configsettings.properties" location="${working.dir}/configsettings_standalone.properties" />
    <echo level="info">Loading configsettings from ${configsettings.properties}</echo>
    <property file="${configsettings.properties}" />
    <patchEar bes.ear="${build.result.package.dir}/oscm-ear/oscm.ear" />
  </target>
</project>