/*******************************************************************************
 *  Copyright FUJITSU LIMITED 2016 
 *******************************************************************************/

package org.oscm.mocksts.ws;

import java.net.MalformedURLException;
import java.net.URL;

import javax.jws.HandlerChain;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.4-b01 Generated
 * source version: 2.2
 * 
 */
@HandlerChain(file = "handlers.xml")
@WebServiceClient(name = "MockWebService", targetNamespace = "http://ws.mocksts.oscm.org/", wsdlLocation = "http://localhost:8680/oscm-integrationtests-saml2-sp/MockWebService?wsdl")
public class MockWebService_Service extends Service {

    private final static URL MOCKWEBSERVICE_WSDL_LOCATION;
    private final static WebServiceException MOCKWEBSERVICE_EXCEPTION;
    private final static QName MOCKWEBSERVICE_QNAME = new QName(
            "http://ws.mocksts.oscm.org/", "MockWebService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL(
                    "http://localhost:8680/oscm-integrationtests-saml2-sp/MockWebService?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        MOCKWEBSERVICE_WSDL_LOCATION = url;
        MOCKWEBSERVICE_EXCEPTION = e;
    }

    public MockWebService_Service() {
        super(__getWsdlLocation(), MOCKWEBSERVICE_QNAME);
    }

    public MockWebService_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), MOCKWEBSERVICE_QNAME, features);
    }

    public MockWebService_Service(URL wsdlLocation) {
        super(wsdlLocation, MOCKWEBSERVICE_QNAME);
    }

    public MockWebService_Service(URL wsdlLocation,
            WebServiceFeature... features) {
        super(wsdlLocation, MOCKWEBSERVICE_QNAME, features);
    }

    public MockWebService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MockWebService_Service(URL wsdlLocation, QName serviceName,
            WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return returns MockWebService
     */
    @WebEndpoint(name = "MockWebServicePort")
    public MockWebService getMockWebServicePort() {
        return super.getPort(new QName("http://ws.mocksts.oscm.org/",
                "MockWebServicePort"), MockWebService.class);
    }

    /**
     * 
     * @param features
     *            A list of {@link javax.xml.ws.WebServiceFeature} to configure
     *            on the proxy. Supported features not in the
     *            <code>features</code> parameter will have their default
     *            values.
     * @return returns MockWebService
     */
    @WebEndpoint(name = "MockWebServicePort")
    public MockWebService getMockWebServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://ws.mocksts.oscm.org/",
                "MockWebServicePort"), MockWebService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (MOCKWEBSERVICE_EXCEPTION != null) {
            throw MOCKWEBSERVICE_EXCEPTION;
        }
        return MOCKWEBSERVICE_WSDL_LOCATION;
    }

}
